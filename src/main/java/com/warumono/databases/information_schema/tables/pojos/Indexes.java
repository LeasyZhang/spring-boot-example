/*
 * This file is generated by jOOQ.
*/
package com.warumono.databases.information_schema.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes implements Serializable {

    private static final long serialVersionUID = 1643206088;

    private String  tableCatalog;
    private String  tableSchema;
    private String  tableName;
    private Boolean nonUnique;
    private String  indexName;
    private Short   ordinalPosition;
    private String  columnName;
    private Integer cardinality;
    private Boolean primaryKey;
    private String  indexTypeName;
    private Boolean isGenerated;
    private Short   indexType;
    private String  ascOrDesc;
    private Integer pages;
    private String  filterCondition;
    private String  remarks;
    private String  sql;
    private Integer id;
    private Integer sortType;
    private String  constraintName;
    private String  indexClass;

    public Indexes() {}

    public Indexes(Indexes value) {
        this.tableCatalog = value.tableCatalog;
        this.tableSchema = value.tableSchema;
        this.tableName = value.tableName;
        this.nonUnique = value.nonUnique;
        this.indexName = value.indexName;
        this.ordinalPosition = value.ordinalPosition;
        this.columnName = value.columnName;
        this.cardinality = value.cardinality;
        this.primaryKey = value.primaryKey;
        this.indexTypeName = value.indexTypeName;
        this.isGenerated = value.isGenerated;
        this.indexType = value.indexType;
        this.ascOrDesc = value.ascOrDesc;
        this.pages = value.pages;
        this.filterCondition = value.filterCondition;
        this.remarks = value.remarks;
        this.sql = value.sql;
        this.id = value.id;
        this.sortType = value.sortType;
        this.constraintName = value.constraintName;
        this.indexClass = value.indexClass;
    }

    public Indexes(
        String  tableCatalog,
        String  tableSchema,
        String  tableName,
        Boolean nonUnique,
        String  indexName,
        Short   ordinalPosition,
        String  columnName,
        Integer cardinality,
        Boolean primaryKey,
        String  indexTypeName,
        Boolean isGenerated,
        Short   indexType,
        String  ascOrDesc,
        Integer pages,
        String  filterCondition,
        String  remarks,
        String  sql,
        Integer id,
        Integer sortType,
        String  constraintName,
        String  indexClass
    ) {
        this.tableCatalog = tableCatalog;
        this.tableSchema = tableSchema;
        this.tableName = tableName;
        this.nonUnique = nonUnique;
        this.indexName = indexName;
        this.ordinalPosition = ordinalPosition;
        this.columnName = columnName;
        this.cardinality = cardinality;
        this.primaryKey = primaryKey;
        this.indexTypeName = indexTypeName;
        this.isGenerated = isGenerated;
        this.indexType = indexType;
        this.ascOrDesc = ascOrDesc;
        this.pages = pages;
        this.filterCondition = filterCondition;
        this.remarks = remarks;
        this.sql = sql;
        this.id = id;
        this.sortType = sortType;
        this.constraintName = constraintName;
        this.indexClass = indexClass;
    }

    public String getTableCatalog() {
        return this.tableCatalog;
    }

    public void setTableCatalog(String tableCatalog) {
        this.tableCatalog = tableCatalog;
    }

    public String getTableSchema() {
        return this.tableSchema;
    }

    public void setTableSchema(String tableSchema) {
        this.tableSchema = tableSchema;
    }

    public String getTableName() {
        return this.tableName;
    }

    public void setTableName(String tableName) {
        this.tableName = tableName;
    }

    public Boolean getNonUnique() {
        return this.nonUnique;
    }

    public void setNonUnique(Boolean nonUnique) {
        this.nonUnique = nonUnique;
    }

    public String getIndexName() {
        return this.indexName;
    }

    public void setIndexName(String indexName) {
        this.indexName = indexName;
    }

    public Short getOrdinalPosition() {
        return this.ordinalPosition;
    }

    public void setOrdinalPosition(Short ordinalPosition) {
        this.ordinalPosition = ordinalPosition;
    }

    public String getColumnName() {
        return this.columnName;
    }

    public void setColumnName(String columnName) {
        this.columnName = columnName;
    }

    public Integer getCardinality() {
        return this.cardinality;
    }

    public void setCardinality(Integer cardinality) {
        this.cardinality = cardinality;
    }

    public Boolean getPrimaryKey_() {
        return this.primaryKey;
    }

    public void setPrimaryKey_(Boolean primaryKey) {
        this.primaryKey = primaryKey;
    }

    public String getIndexTypeName() {
        return this.indexTypeName;
    }

    public void setIndexTypeName(String indexTypeName) {
        this.indexTypeName = indexTypeName;
    }

    public Boolean getIsGenerated() {
        return this.isGenerated;
    }

    public void setIsGenerated(Boolean isGenerated) {
        this.isGenerated = isGenerated;
    }

    public Short getIndexType() {
        return this.indexType;
    }

    public void setIndexType(Short indexType) {
        this.indexType = indexType;
    }

    public String getAscOrDesc() {
        return this.ascOrDesc;
    }

    public void setAscOrDesc(String ascOrDesc) {
        this.ascOrDesc = ascOrDesc;
    }

    public Integer getPages() {
        return this.pages;
    }

    public void setPages(Integer pages) {
        this.pages = pages;
    }

    public String getFilterCondition() {
        return this.filterCondition;
    }

    public void setFilterCondition(String filterCondition) {
        this.filterCondition = filterCondition;
    }

    public String getRemarks() {
        return this.remarks;
    }

    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    public String getSql() {
        return this.sql;
    }

    public void setSql(String sql) {
        this.sql = sql;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getSortType() {
        return this.sortType;
    }

    public void setSortType(Integer sortType) {
        this.sortType = sortType;
    }

    public String getConstraintName() {
        return this.constraintName;
    }

    public void setConstraintName(String constraintName) {
        this.constraintName = constraintName;
    }

    public String getIndexClass() {
        return this.indexClass;
    }

    public void setIndexClass(String indexClass) {
        this.indexClass = indexClass;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Indexes (");

        sb.append(tableCatalog);
        sb.append(", ").append(tableSchema);
        sb.append(", ").append(tableName);
        sb.append(", ").append(nonUnique);
        sb.append(", ").append(indexName);
        sb.append(", ").append(ordinalPosition);
        sb.append(", ").append(columnName);
        sb.append(", ").append(cardinality);
        sb.append(", ").append(primaryKey);
        sb.append(", ").append(indexTypeName);
        sb.append(", ").append(isGenerated);
        sb.append(", ").append(indexType);
        sb.append(", ").append(ascOrDesc);
        sb.append(", ").append(pages);
        sb.append(", ").append(filterCondition);
        sb.append(", ").append(remarks);
        sb.append(", ").append(sql);
        sb.append(", ").append(id);
        sb.append(", ").append(sortType);
        sb.append(", ").append(constraintName);
        sb.append(", ").append(indexClass);

        sb.append(")");
        return sb.toString();
    }
}
