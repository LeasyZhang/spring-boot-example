apply plugin: 'com.google.protobuf'
apply plugin: 'application'

apply plugin: 'java'

repositories {
    mavenLocal()
    mavenCentral()
}

group 'com.example.boot'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.12"
    }
}

dependencies {
    api('org.springframework.boot:spring-boot-starter-web')
    api('io.grpc:grpc-netty')
    api('io.grpc:grpc-protobuf')
    api('io.grpc:grpc-stub')
    api('io.grpc:grpc-services')
    compileOnly group: 'org.projectlombok', name: 'lombok'
    annotationProcessor group: 'org.projectlombok', name: 'lombok'
    testCompileOnly group: 'org.projectlombok', name: 'lombok'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok'
    testImplementation group: 'org.projectlombok', name: 'lombok'
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            // include self written and generated code
            srcDirs 'src/main/java', 'generated-sources/main/java', 'generated-sources/main/grpc'
        }
    }
}

mainClassName = "com.example.boot.GrpcServerApplication"

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.2'
    }

    // Configure the codegen plugins
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.1.2'
        }
    }

    generateProtoTasks.generatedFilesBaseDir = 'generated-sources'

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}