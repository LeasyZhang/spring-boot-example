/*
 * This file is generated by jOOQ.
*/
package example.jooq.databases;


import example.jooq.databases.tables.Account;
import example.jooq.databases.tables.Author;
import example.jooq.databases.tables.Book;
import example.jooq.databases.tables.T;
import example.jooq.databases.tables.T2;
import example.jooq.databases.tables.Weather;
import example.jooq.databases.tables.records.AccountRecord;
import example.jooq.databases.tables.records.AuthorRecord;
import example.jooq.databases.tables.records.BookRecord;
import example.jooq.databases.tables.records.T2Record;
import example.jooq.databases.tables.records.TRecord;
import example.jooq.databases.tables.records.WeatherRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>mydb</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TRecord, Integer> IDENTITY_T = Identities0.IDENTITY_T;
    public static final Identity<T2Record, Integer> IDENTITY_T2 = Identities0.IDENTITY_T2;
    public static final Identity<WeatherRecord, Long> IDENTITY_WEATHER = Identities0.IDENTITY_WEATHER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
    public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = UniqueKeys0.KEY_AUTHOR_PRIMARY;
    public static final UniqueKey<BookRecord> KEY_BOOK_PRIMARY = UniqueKeys0.KEY_BOOK_PRIMARY;
    public static final UniqueKey<TRecord> KEY_T_PRIMARY = UniqueKeys0.KEY_T_PRIMARY;
    public static final UniqueKey<TRecord> KEY_T_C = UniqueKeys0.KEY_T_C;
    public static final UniqueKey<T2Record> KEY_T2_PRIMARY = UniqueKeys0.KEY_T2_PRIMARY;
    public static final UniqueKey<T2Record> KEY_T2_C = UniqueKeys0.KEY_T2_C;
    public static final UniqueKey<WeatherRecord> KEY_WEATHER_PRIMARY = UniqueKeys0.KEY_WEATHER_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<TRecord, Integer> IDENTITY_T = createIdentity(T.T, T.T.ID);
        public static Identity<T2Record, Integer> IDENTITY_T2 = createIdentity(T2.T2, T2.T2.ID);
        public static Identity<WeatherRecord, Long> IDENTITY_WEATHER = createIdentity(Weather.WEATHER, Weather.WEATHER.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = createUniqueKey(Account.ACCOUNT, "KEY_account_PRIMARY", Account.ACCOUNT.ID);
        public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = createUniqueKey(Author.AUTHOR, "KEY_author_PRIMARY", Author.AUTHOR.ID);
        public static final UniqueKey<BookRecord> KEY_BOOK_PRIMARY = createUniqueKey(Book.BOOK, "KEY_book_PRIMARY", Book.BOOK.ID);
        public static final UniqueKey<TRecord> KEY_T_PRIMARY = createUniqueKey(T.T, "KEY_t_PRIMARY", T.T.ID);
        public static final UniqueKey<TRecord> KEY_T_C = createUniqueKey(T.T, "KEY_t_c", T.T.C);
        public static final UniqueKey<T2Record> KEY_T2_PRIMARY = createUniqueKey(T2.T2, "KEY_t2_PRIMARY", T2.T2.ID);
        public static final UniqueKey<T2Record> KEY_T2_C = createUniqueKey(T2.T2, "KEY_t2_c", T2.T2.C);
        public static final UniqueKey<WeatherRecord> KEY_WEATHER_PRIMARY = createUniqueKey(Weather.WEATHER, "KEY_weather_PRIMARY", Weather.WEATHER.ID);
    }
}
