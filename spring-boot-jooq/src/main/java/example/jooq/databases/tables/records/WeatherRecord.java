/*
 * This file is generated by jOOQ.
*/
package example.jooq.databases.tables.records;


import example.jooq.databases.tables.Weather;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WeatherRecord extends UpdatableRecordImpl<WeatherRecord> implements Record5<Long, Double, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 853335041;

    /**
     * Setter for <code>mydb.weather.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>mydb.weather.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>mydb.weather.temperature</code>.
     */
    public void setTemperature(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>mydb.weather.temperature</code>.
     */
    public Double getTemperature() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>mydb.weather.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mydb.weather.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mydb.weather.created_time</code>.
     */
    public void setCreatedTime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>mydb.weather.created_time</code>.
     */
    public Timestamp getCreatedTime() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>mydb.weather.updated_time</code>.
     */
    public void setUpdatedTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>mydb.weather.updated_time</code>.
     */
    public Timestamp getUpdatedTime() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Double, String, Timestamp, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Double, String, Timestamp, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Weather.WEATHER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return Weather.WEATHER.TEMPERATURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Weather.WEATHER.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Weather.WEATHER.CREATED_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Weather.WEATHER.UPDATED_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getTemperature();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCreatedTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getUpdatedTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WeatherRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WeatherRecord value2(Double value) {
        setTemperature(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WeatherRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WeatherRecord value4(Timestamp value) {
        setCreatedTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WeatherRecord value5(Timestamp value) {
        setUpdatedTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WeatherRecord values(Long value1, Double value2, String value3, Timestamp value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WeatherRecord
     */
    public WeatherRecord() {
        super(Weather.WEATHER);
    }

    /**
     * Create a detached, initialised WeatherRecord
     */
    public WeatherRecord(Long id, Double temperature, String description, Timestamp createdTime, Timestamp updatedTime) {
        super(Weather.WEATHER);

        set(0, id);
        set(1, temperature);
        set(2, description);
        set(3, createdTime);
        set(4, updatedTime);
    }
}
