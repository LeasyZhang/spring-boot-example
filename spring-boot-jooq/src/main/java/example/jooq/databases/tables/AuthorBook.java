/*
 * This file is generated by jOOQ.
*/
package example.jooq.databases.tables;


import example.jooq.databases.Mydb;
import example.jooq.databases.tables.records.AuthorBookRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorBook extends TableImpl<AuthorBookRecord> {

    private static final long serialVersionUID = -1714624646;

    /**
     * The reference instance of <code>mydb.author_book</code>
     */
    public static final AuthorBook AUTHOR_BOOK = new AuthorBook();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuthorBookRecord> getRecordType() {
        return AuthorBookRecord.class;
    }

    /**
     * The column <code>mydb.author_book.author_id</code>.
     */
    public final TableField<AuthorBookRecord, Integer> AUTHOR_ID = createField("author_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>mydb.author_book.book_id</code>.
     */
    public final TableField<AuthorBookRecord, Integer> BOOK_ID = createField("book_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>mydb.author_book</code> table reference
     */
    public AuthorBook() {
        this("author_book", null);
    }

    /**
     * Create an aliased <code>mydb.author_book</code> table reference
     */
    public AuthorBook(String alias) {
        this(alias, AUTHOR_BOOK);
    }

    private AuthorBook(String alias, Table<AuthorBookRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuthorBook(String alias, Table<AuthorBookRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mydb.MYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorBook as(String alias) {
        return new AuthorBook(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuthorBook rename(String name) {
        return new AuthorBook(name, null);
    }
}
