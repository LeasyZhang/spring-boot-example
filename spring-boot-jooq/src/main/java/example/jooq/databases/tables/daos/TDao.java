/*
 * This file is generated by jOOQ.
 */
package example.jooq.databases.tables.daos;


import example.jooq.databases.tables.T;
import example.jooq.databases.tables.records.TRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDao extends DAOImpl<TRecord, example.jooq.databases.tables.pojos.T, Integer> {

    /**
     * Create a new TDao without any configuration
     */
    public TDao() {
        super(T.T, example.jooq.databases.tables.pojos.T.class);
    }

    /**
     * Create a new TDao with an attached configuration
     */
    public TDao(Configuration configuration) {
        super(T.T, example.jooq.databases.tables.pojos.T.class, configuration);
    }

    @Override
    public Integer getId(example.jooq.databases.tables.pojos.T object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.jooq.databases.tables.pojos.T> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(T.T.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.T> fetchById(Integer... values) {
        return fetch(T.T.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public example.jooq.databases.tables.pojos.T fetchOneById(Integer value) {
        return fetchOne(T.T.ID, value);
    }

    /**
     * Fetch records that have <code>c BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.jooq.databases.tables.pojos.T> fetchRangeOfC(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(T.T.C, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>c IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.T> fetchByC(Integer... values) {
        return fetch(T.T.C, values);
    }

    /**
     * Fetch a unique record that has <code>c = value</code>
     */
    public example.jooq.databases.tables.pojos.T fetchOneByC(Integer value) {
        return fetchOne(T.T.C, value);
    }

    /**
     * Fetch records that have <code>d BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.jooq.databases.tables.pojos.T> fetchRangeOfD(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(T.T.D, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>d IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.T> fetchByD(Integer... values) {
        return fetch(T.T.D, values);
    }
}
