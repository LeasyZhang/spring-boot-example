/*
 * This file is generated by jOOQ.
*/
package example.jooq.databases.tables.daos;


import example.jooq.databases.tables.Account;
import example.jooq.databases.tables.records.AccountRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountDao extends DAOImpl<AccountRecord, example.jooq.databases.tables.pojos.Account, String> {

    /**
     * Create a new AccountDao without any configuration
     */
    public AccountDao() {
        super(Account.ACCOUNT, example.jooq.databases.tables.pojos.Account.class);
    }

    /**
     * Create a new AccountDao with an attached configuration
     */
    public AccountDao(Configuration configuration) {
        super(Account.ACCOUNT, example.jooq.databases.tables.pojos.Account.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(example.jooq.databases.tables.pojos.Account object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.Account> fetchById(String... values) {
        return fetch(Account.ACCOUNT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public example.jooq.databases.tables.pojos.Account fetchOneById(String value) {
        return fetchOne(Account.ACCOUNT.ID, value);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.Account> fetchByEmail(String... values) {
        return fetch(Account.ACCOUNT.EMAIL, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.Account> fetchByName(String... values) {
        return fetch(Account.ACCOUNT.NAME, values);
    }

    /**
     * Fetch records that have <code>phone_number IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.Account> fetchByPhoneNumber(String... values) {
        return fetch(Account.ACCOUNT.PHONE_NUMBER, values);
    }

    /**
     * Fetch records that have <code>confirmed_and_active IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.Account> fetchByConfirmedAndActive(Byte... values) {
        return fetch(Account.ACCOUNT.CONFIRMED_AND_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>member_since IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.Account> fetchByMemberSince(Timestamp... values) {
        return fetch(Account.ACCOUNT.MEMBER_SINCE, values);
    }

    /**
     * Fetch records that have <code>password_hash IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.Account> fetchByPasswordHash(String... values) {
        return fetch(Account.ACCOUNT.PASSWORD_HASH, values);
    }

    /**
     * Fetch records that have <code>photo_url IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.Account> fetchByPhotoUrl(String... values) {
        return fetch(Account.ACCOUNT.PHOTO_URL, values);
    }

    /**
     * Fetch records that have <code>support IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.Account> fetchBySupport(Byte... values) {
        return fetch(Account.ACCOUNT.SUPPORT, values);
    }
}
