/*
 * This file is generated by jOOQ.
 */
package example.jooq.databases.tables.records;


import example.jooq.databases.tables.Account;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record9<String, String, String, String, Byte, LocalDateTime, String, String, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mydb.account.id</code>.
     */
    public AccountRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mydb.account.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mydb.account.email</code>.
     */
    public AccountRecord setEmail(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mydb.account.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mydb.account.name</code>.
     */
    public AccountRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mydb.account.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mydb.account.phone_number</code>.
     */
    public AccountRecord setPhoneNumber(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mydb.account.phone_number</code>.
     */
    public String getPhoneNumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mydb.account.confirmed_and_active</code>.
     */
    public AccountRecord setConfirmedAndActive(Byte value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mydb.account.confirmed_and_active</code>.
     */
    public Byte getConfirmedAndActive() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>mydb.account.member_since</code>.
     */
    public AccountRecord setMemberSince(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>mydb.account.member_since</code>.
     */
    public LocalDateTime getMemberSince() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>mydb.account.password_hash</code>.
     */
    public AccountRecord setPasswordHash(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>mydb.account.password_hash</code>.
     */
    public String getPasswordHash() {
        return (String) get(6);
    }

    /**
     * Setter for <code>mydb.account.photo_url</code>.
     */
    public AccountRecord setPhotoUrl(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>mydb.account.photo_url</code>.
     */
    public String getPhotoUrl() {
        return (String) get(7);
    }

    /**
     * Setter for <code>mydb.account.support</code>.
     */
    public AccountRecord setSupport(Byte value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>mydb.account.support</code>.
     */
    public Byte getSupport() {
        return (Byte) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, String, Byte, LocalDateTime, String, String, Byte> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<String, String, String, String, Byte, LocalDateTime, String, String, Byte> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Account.ACCOUNT.ID;
    }

    @Override
    public Field<String> field2() {
        return Account.ACCOUNT.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return Account.ACCOUNT.NAME;
    }

    @Override
    public Field<String> field4() {
        return Account.ACCOUNT.PHONE_NUMBER;
    }

    @Override
    public Field<Byte> field5() {
        return Account.ACCOUNT.CONFIRMED_AND_ACTIVE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Account.ACCOUNT.MEMBER_SINCE;
    }

    @Override
    public Field<String> field7() {
        return Account.ACCOUNT.PASSWORD_HASH;
    }

    @Override
    public Field<String> field8() {
        return Account.ACCOUNT.PHOTO_URL;
    }

    @Override
    public Field<Byte> field9() {
        return Account.ACCOUNT.SUPPORT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getPhoneNumber();
    }

    @Override
    public Byte component5() {
        return getConfirmedAndActive();
    }

    @Override
    public LocalDateTime component6() {
        return getMemberSince();
    }

    @Override
    public String component7() {
        return getPasswordHash();
    }

    @Override
    public String component8() {
        return getPhotoUrl();
    }

    @Override
    public Byte component9() {
        return getSupport();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getPhoneNumber();
    }

    @Override
    public Byte value5() {
        return getConfirmedAndActive();
    }

    @Override
    public LocalDateTime value6() {
        return getMemberSince();
    }

    @Override
    public String value7() {
        return getPasswordHash();
    }

    @Override
    public String value8() {
        return getPhotoUrl();
    }

    @Override
    public Byte value9() {
        return getSupport();
    }

    @Override
    public AccountRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public AccountRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public AccountRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public AccountRecord value4(String value) {
        setPhoneNumber(value);
        return this;
    }

    @Override
    public AccountRecord value5(Byte value) {
        setConfirmedAndActive(value);
        return this;
    }

    @Override
    public AccountRecord value6(LocalDateTime value) {
        setMemberSince(value);
        return this;
    }

    @Override
    public AccountRecord value7(String value) {
        setPasswordHash(value);
        return this;
    }

    @Override
    public AccountRecord value8(String value) {
        setPhotoUrl(value);
        return this;
    }

    @Override
    public AccountRecord value9(Byte value) {
        setSupport(value);
        return this;
    }

    @Override
    public AccountRecord values(String value1, String value2, String value3, String value4, Byte value5, LocalDateTime value6, String value7, String value8, Byte value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(String id, String email, String name, String phoneNumber, Byte confirmedAndActive, LocalDateTime memberSince, String passwordHash, String photoUrl, Byte support) {
        super(Account.ACCOUNT);

        setId(id);
        setEmail(email);
        setName(name);
        setPhoneNumber(phoneNumber);
        setConfirmedAndActive(confirmedAndActive);
        setMemberSince(memberSince);
        setPasswordHash(passwordHash);
        setPhotoUrl(photoUrl);
        setSupport(support);
    }
}
