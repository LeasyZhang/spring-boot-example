/*
 * This file is generated by jOOQ.
*/
package example.jooq.databases.tables.records;


import example.jooq.databases.tables.Account;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record9<String, String, String, String, Byte, Timestamp, String, String, Byte> {

    private static final long serialVersionUID = 1088835249;

    /**
     * Setter for <code>mydb.account.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mydb.account.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mydb.account.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mydb.account.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mydb.account.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mydb.account.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mydb.account.phone_number</code>.
     */
    public void setPhoneNumber(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mydb.account.phone_number</code>.
     */
    public String getPhoneNumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mydb.account.confirmed_and_active</code>.
     */
    public void setConfirmedAndActive(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>mydb.account.confirmed_and_active</code>.
     */
    public Byte getConfirmedAndActive() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>mydb.account.member_since</code>.
     */
    public void setMemberSince(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>mydb.account.member_since</code>.
     */
    public Timestamp getMemberSince() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>mydb.account.password_hash</code>.
     */
    public void setPasswordHash(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>mydb.account.password_hash</code>.
     */
    public String getPasswordHash() {
        return (String) get(6);
    }

    /**
     * Setter for <code>mydb.account.photo_url</code>.
     */
    public void setPhotoUrl(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>mydb.account.photo_url</code>.
     */
    public String getPhotoUrl() {
        return (String) get(7);
    }

    /**
     * Setter for <code>mydb.account.support</code>.
     */
    public void setSupport(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>mydb.account.support</code>.
     */
    public Byte getSupport() {
        return (Byte) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<String, String, String, String, Byte, Timestamp, String, String, Byte> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<String, String, String, String, Byte, Timestamp, String, String, Byte> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Account.ACCOUNT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Account.ACCOUNT.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Account.ACCOUNT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Account.ACCOUNT.PHONE_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return Account.ACCOUNT.CONFIRMED_AND_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Account.ACCOUNT.MEMBER_SINCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Account.ACCOUNT.PASSWORD_HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Account.ACCOUNT.PHOTO_URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field9() {
        return Account.ACCOUNT.SUPPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPhoneNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getConfirmedAndActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getMemberSince();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getPasswordHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getPhotoUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value9() {
        return getSupport();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value2(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value4(String value) {
        setPhoneNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value5(Byte value) {
        setConfirmedAndActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value6(Timestamp value) {
        setMemberSince(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value7(String value) {
        setPasswordHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value8(String value) {
        setPhotoUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value9(Byte value) {
        setSupport(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord values(String value1, String value2, String value3, String value4, Byte value5, Timestamp value6, String value7, String value8, Byte value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(String id, String email, String name, String phoneNumber, Byte confirmedAndActive, Timestamp memberSince, String passwordHash, String photoUrl, Byte support) {
        super(Account.ACCOUNT);

        set(0, id);
        set(1, email);
        set(2, name);
        set(3, phoneNumber);
        set(4, confirmedAndActive);
        set(5, memberSince);
        set(6, passwordHash);
        set(7, photoUrl);
        set(8, support);
    }
}
