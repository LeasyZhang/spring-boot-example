/*
 * This file is generated by jOOQ.
*/
package example.jooq.databases.tables.records;


import example.jooq.databases.tables.A;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ARecord extends TableRecordImpl<ARecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -1415805856;

    /**
     * Setter for <code>mydb.a.f1</code>.
     */
    public void setF1(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mydb.a.f1</code>.
     */
    public Integer getF1() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mydb.a.f2</code>.
     */
    public void setF2(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mydb.a.f2</code>.
     */
    public Integer getF2() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return A.A.F1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return A.A.F2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getF1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getF2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ARecord value1(Integer value) {
        setF1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ARecord value2(Integer value) {
        setF2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ARecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ARecord
     */
    public ARecord() {
        super(A.A);
    }

    /**
     * Create a detached, initialised ARecord
     */
    public ARecord(Integer f1, Integer f2) {
        super(A.A);

        set(0, f1);
        set(1, f2);
    }
}
