/*
 * This file is generated by jOOQ.
*/
package example.jooq.databases.tables.daos;


import example.jooq.databases.tables.T2;
import example.jooq.databases.tables.records.T2Record;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T2Dao extends DAOImpl<T2Record, example.jooq.databases.tables.pojos.T2, Integer> {

    /**
     * Create a new T2Dao without any configuration
     */
    public T2Dao() {
        super(T2.T2, example.jooq.databases.tables.pojos.T2.class);
    }

    /**
     * Create a new T2Dao with an attached configuration
     */
    public T2Dao(Configuration configuration) {
        super(T2.T2, example.jooq.databases.tables.pojos.T2.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(example.jooq.databases.tables.pojos.T2 object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.T2> fetchById(Integer... values) {
        return fetch(T2.T2.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public example.jooq.databases.tables.pojos.T2 fetchOneById(Integer value) {
        return fetchOne(T2.T2.ID, value);
    }

    /**
     * Fetch records that have <code>c IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.T2> fetchByC(Integer... values) {
        return fetch(T2.T2.C, values);
    }

    /**
     * Fetch a unique record that has <code>c = value</code>
     */
    public example.jooq.databases.tables.pojos.T2 fetchOneByC(Integer value) {
        return fetchOne(T2.T2.C, value);
    }

    /**
     * Fetch records that have <code>d IN (values)</code>
     */
    public List<example.jooq.databases.tables.pojos.T2> fetchByD(Integer... values) {
        return fetch(T2.T2.D, values);
    }
}
